package me.ht9.rose.feature.module.modules.exploit.lawnmower;

import me.ht9.rose.event.bus.annotation.SubscribeEvent;
import me.ht9.rose.event.events.PosRotUpdateEvent;
import me.ht9.rose.feature.module.Module;
import me.ht9.rose.feature.module.annotation.Description;
import me.ht9.rose.util.module.Timer;
import me.ht9.rose.feature.module.setting.Setting;
import net.minecraft.src.Block;
import net.minecraft.src.MathHelper;

import java.util.Arrays;
import java.util.List;

@Description("Instamine nuker for dirt and sand.")
public final class Lawnmower extends Module
{
    private static final Lawnmower instance = new Lawnmower();

    private static final List<Integer> BLOCKS_TO_BREAK = Arrays.asList(2, 3, 5, 12, 13, 17, 18);

    public final Setting<Integer> xRadius = new Setting<>("xRadius", 2, 3, 5);
    public final Setting<Integer> yRadius = new Setting<>("yRadius", 2, 3, 5);
    public final Setting<Integer> zRadius = new Setting<>("zRadius", 2, 3, 5);

    public final Setting<Integer> delay = new Setting<>("Delay", 0, 200, 1000);

    private final Timer timer = new Timer();

    @Override
    public void onEnable()
    {
        timer.reset();
    }

    @SuppressWarnings("unused")
    @SubscribeEvent
    public void onUpdate(PosRotUpdateEvent event)
    {
        if (!timer.hasReached(delay.value())) return;

        int posX = MathHelper.floor_double(mc.thePlayer.posX);
        int posY = MathHelper.floor_double(mc.thePlayer.boundingBox.minY);
        int posZ = MathHelper.floor_double(mc.thePlayer.posZ);

        int radiusX = xRadius.value();
        int radiusY = yRadius.value();
        int radiusZ = zRadius.value();

        for (int x = -radiusX; x <= radiusX; x++) {
            for (int z = -radiusZ; z <= radiusZ; z++) {
                for (int y = -radiusY; y <= radiusY; y++) {
                    int blockId = mc.theWorld.getBlockId(posX + x, posY + y, posZ + z);
                    float hardness = Block.blocksList[blockId].getHardness();
                    if (hardness < 0.0f || hardness > 10.0f) continue;

                    if (!BLOCKS_TO_BREAK.contains(blockId)) continue;

                    int finalX = x;
                    int finalY = y;
                    int finalZ = z;
                    new Thread(() -> {
                        while (mc.theWorld.getBlockId(posX + finalX, posY + finalY, posZ + finalZ) != 0)
                            mc.playerController.sendBlockRemoving(posX + finalX, posY + finalY, posZ + finalZ, 0);
                    }).start();
                }
            }
        }

        timer.reset();
    }

    public static Lawnmower instance()
    {
        return instance;
    }
}
