package me.ht9.rose.feature.module.modules.exploit.instamine;

import me.ht9.rose.event.bus.annotation.SubscribeEvent;
import me.ht9.rose.event.events.PlayerBlockClickEvent;
import me.ht9.rose.event.factory.Factory;
import me.ht9.rose.feature.module.Module;
import me.ht9.rose.feature.module.annotation.Description;
import net.minecraft.src.Block;
import net.minecraft.src.Packet14BlockDig;

@Description("Attempt to instantly mine blocks")
public final class Instamine extends Module {
    private static final Instamine instance = new Instamine();

    @SuppressWarnings("unused")
    @SubscribeEvent
    public void onBlockBreak(PlayerBlockClickEvent event) {
        if (mc.theWorld == null || mc.thePlayer == null) return;

        this.mineBlock(event.x(), event.y(), event.z(), event.side());
    }

    public void mineBlock(int x, int y, int z, int side)
    {
        if (mc.getSendQueue() != null)
        {
            if (Factory.instance().protocolVersion > 8)
            {
                mc.getSendQueue().addToSendQueue(new Packet14BlockDig(0, x, y, z, side));
                mc.getSendQueue().addToSendQueue(new Packet14BlockDig(2, x, y, z, side));
            }
            else
            {
                float blockStrength = Block.blocksList[mc.theWorld.getBlockId(x, y, z)].blockStrength(mc.thePlayer);
                if (blockStrength == 0.0f) return;

                mc.getSendQueue().addToSendQueue(new Packet14BlockDig(0, x, y, z, side));

                int packetAmount = (int) Math.ceil(1.0 / blockStrength) + 5;
                for (int i = 1; i <= packetAmount; i++)
                {
                    mc.getSendQueue().addToSendQueue(new Packet14BlockDig(1, x, y, z, side));

                    if (i % 5 == 0)
                    {
                        mc.getSendQueue().addToSendQueue(new Packet14BlockDig(0, x, y, z, side));
                    }
                }

                mc.getSendQueue().addToSendQueue(new Packet14BlockDig(3, x, y, z, side));
            }
        }
        mc.playerController.sendBlockRemoved(x, y, z, side);
    }

    public static Instamine instance() {
        return instance;
    }
}
