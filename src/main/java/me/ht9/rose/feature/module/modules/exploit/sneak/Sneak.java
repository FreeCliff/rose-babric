package me.ht9.rose.feature.module.modules.exploit.sneak;

import me.ht9.rose.event.bus.annotation.SubscribeEvent;
import me.ht9.rose.event.events.MoveStateUpdateEvent;
import me.ht9.rose.event.events.PacketEvent;
import me.ht9.rose.event.events.PosRotUpdateEvent;
import me.ht9.rose.feature.module.Module;
import me.ht9.rose.feature.module.annotation.Description;
import me.ht9.rose.feature.module.setting.Setting;
import net.minecraft.src.Packet19EntityAction;
import org.lwjgl.input.Keyboard;

@Description("Automatically sneaks for you")
public final class Sneak extends Module
{
    private static final Sneak instance = new Sneak();

    private final Setting<Type> type = new Setting<>("Type", Type.Vanilla);

    @Override
    public void onEnable() {
        if (mc.getSendQueue() != null && type.value() == Type.Packet)
        {
            mc.getSendQueue().addToSendQueue(new Packet19EntityAction(mc.thePlayer, 1));
        }
    }

    @Override
    public void onDisable() {
        if (mc.getSendQueue() != null && type.value() == Type.Packet)
        {
            mc.getSendQueue().addToSendQueue(new Packet19EntityAction(mc.thePlayer, 2));
        }
        else if (type.value() == Type.Vanilla)
        {
            mc.thePlayer.movementInput.checkKeyForMovementInput(mc.gameSettings.keyBindSneak.keyCode, false);
        }
    }

    @SuppressWarnings("unused")
    @SubscribeEvent
    public void onPacket(PacketEvent event)
    {
        if (type.value() != Type.Packet) return;
        if (!event.serverBound()) return;
        if (!(event.packet() instanceof Packet19EntityAction packet)) return;
        if (packet.state == 2)
            event.setCancelled(true);
    }

    @SuppressWarnings("unused")
    @SubscribeEvent
    public void onMoveStateUpdate(MoveStateUpdateEvent event)
    {
        if (type.value() == Type.Vanilla)
            event.setSneak(true);
    }

    public static Sneak instance()
    {
        return instance;
    }

    public enum Type
    {
        Vanilla,
        Packet
    }
}
