package me.ht9.rose.feature.module.modules.exploit.boattravel;

import me.ht9.rose.event.bus.annotation.SubscribeEvent;
import me.ht9.rose.event.events.PosRotUpdateEvent;
import me.ht9.rose.feature.module.Module;
import me.ht9.rose.feature.module.annotation.Description;
import me.ht9.rose.feature.module.setting.Setting;
import net.minecraft.src.EntityBoat;
import net.minecraft.src.Packet13PlayerLookMove;

@Description("Boat go brrr. Only works in multiplayer.")
public final class BoatTravel extends Module
{
    private static final BoatTravel instance = new BoatTravel();

    public final Setting<Integer> xVelocity = new Setting<>("xVelocity", -1, 0, 1);
    public final Setting<Integer> zVelocity = new Setting<>("zVelocity", -1, 0, 1);
    public final Setting<Integer> speed = new Setting<>("Speed", 1, 1, 100);
    public final Setting<Integer> packetMultiplier = new Setting<>("PacketMult", 1, 1, 25);

    @SuppressWarnings("unused")
    @SubscribeEvent
    public void onUpdate(PosRotUpdateEvent event)
    {
        if (mc.thePlayer.ridingEntity == null) return;
        if (!(mc.thePlayer.ridingEntity instanceof EntityBoat)) return;
        if (!mc.isMultiplayerWorld()) return;

        double xVel = xVelocity.value() * speed.value();
        double zVel = zVelocity.value() * speed.value();

        for (int i = 0; i < packetMultiplier.value(); i++)
        {
            mc.getSendQueue().addToSendQueue(new Packet13PlayerLookMove(xVel, -999, -999, zVel, mc.thePlayer.rotationYaw, mc.thePlayer.rotationPitch, false));
        }
    }

    public static BoatTravel instance() {
        return instance;
    }
}
