package me.ht9.rose.feature.module.modules.exploit.packetlogger;

import me.ht9.rose.event.bus.annotation.SubscribeEvent;
import me.ht9.rose.event.events.PacketEvent;
import me.ht9.rose.feature.module.Module;
import me.ht9.rose.feature.module.annotation.Description;
import me.ht9.rose.feature.module.setting.Setting;

@Description("shitty packet logger")
public final class PacketLogger extends Module {
    private static final PacketLogger instance = new PacketLogger();

    public final Setting<Boolean> sent = new Setting<>("Sent", true);
    public final Setting<Boolean> received = new Setting<>("Received", false);

    @SuppressWarnings("unused")
    @SubscribeEvent
    public void onPacket(PacketEvent event) {
        if (sent.value() && event.serverBound()) {
            System.out.println("sent: " + event.packet().getPacketId());
        }
        if (received.value() && !event.serverBound()) {
            System.out.println("received: " + event.packet().getPacketId());
        }
    }

    public static PacketLogger instance() {
        return instance;
    }
}
