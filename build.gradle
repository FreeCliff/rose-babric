plugins {
	id 'fabric-loom' version '1.7.2'
	id 'babric-loom-extension' version '1.7.4'
}

//noinspection GroovyUnusedAssignment
sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17

def getGitHash()
{
	def gitFolder = "$projectDir/.git/"
	def takeFromHash = 7

	def head = new File(gitFolder + "HEAD").text.split(":")
	def isCommit = head.length == 1

	if (isCommit) return head[0].trim().take(takeFromHash)

	def refHead = new File(gitFolder + head[1].trim())
	refHead.text.trim().take takeFromHash
}

archivesBaseName = project.archives_base_name
version = "3.0.0"

version = version + "-git-" + getGitHash()

loom {
	mixin {
		defaultRefmapName = "${archivesBaseName}.refmap.json"
	}
}

repositories {
	maven { url = 'https://maven.glass-launcher.net/babric' }
	maven { url = 'https://jitpack.io' }
	maven { url = 'https://github.com/skibidiware/maven/raw/main' }
	exclusiveContent {
		forRepository {
			maven {
				name = "Modrinth"
				url = "https://api.modrinth.com/maven"
			}
		}
		filter {
			includeGroup "maven.modrinth"
		}
	}
	mavenCentral()
}

dependencies {
	minecraft("com.mojang:minecraft:${project.minecraft_version}")
	mappings("org.wksh:mcp:${project.mcp_mappings}")
	modImplementation("babric:fabric-loader:${project.loader_version}")

	implementation 'com.google.guava:guava:33.2.1-jre'
	implementation 'org.apache.logging.log4j:log4j-slf4j18-impl:2.17.2'
	implementation 'org.apache.commons:commons-lang3:3.0'
	implementation 'org.slf4j:slf4j-api:1.8.0-beta4'
	implementation 'com.google.code.gson:gson:2.8.9'
	implementation 'blue.endless:jankson:1.2.1'

	modImplementation('me.howard:multiproto-nostapi:0.4.1') {
		transitive false
	}
	modImplementation('maven.modrinth:modmenu-beta:1.8.5-beta.9') {
		transitive false
	}
}

if (!gradle.startParameter.taskNames.contains('MinecraftClient')) {
	configurations.configureEach {
		resolutionStrategy {
			force 'org.lwjgl.lwjgl:lwjgl_util:2.9.3'
			force 'org.lwjgl.lwjgl:lwjgl:2.9.3'
			force 'org.lwjgl.lwjgl:lwjgl-platform:2.9.3'
		}
	}
}

processResources {
	filesMatching("fabric.mod.json") {
		expand(
				"version": project.version,
				"refMap": "${archivesBaseName}.refmap.json"
		)
	}
}

tasks.withType(JavaCompile).configureEach { it.options.release = 17 }
